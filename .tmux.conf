set -g prefix C-q
unbind-key -n C-a

# Window Management
# =================
bind-key -n M-Left previous-window
bind-key -n M-Right next-window
bind-key -n M-Down new-window -c '#{pane_current_path}' # Causes an error and breakage on old versions of tmux.
# bind-key -n M-Down neww # Doesn't preserve folder on new versions of tmux.
bind-key -n M-Up kill-pane

bind-key -n C-S-Left swap-window -t :-1
bind-key -n C-S-Right swap-window -t :+1

bind-key -n F8 command-prompt -p "(rename-window)" "rename-window '%%'" # Allow spaces


# Pane Management
# ===============
bind-key '|' split-window -h -c "#{pane_current_path}"
bind-key '-' split-window -v -c "#{pane_current_path}"
# C-q o is good for moving.
# C-q <arrowkey> is good for moving.
# C-q C-<arrowkey> is good for resizing.
# Clicking or click-and-dragging also work well.
bind-key m command-prompt -p ' man' "split-window -h -c '#{pane_current_path}' 'man %%'"


# Display
# =======

# Taken from /usr/share/byobu/profiles/tmux
set-window-option -g monitor-activity on # update tab name to running process name, even in background. Also highlight tab.
set-window-option -g window-status-bg '#333333' # inactive tab
set-window-option -g window-status-fg '#EEEEEE'
set-window-option -g window-status-current-bg yellow # current tab
set-window-option -g window-status-current-fg black
# set-window-option -g aggressive-resize on # ???
set -g status-bg '#333333' # bottom bar
set -g status-fg '#EEEEEE'
# set -g status-interval 1 # ???
set -g message-bg '#75507B' # prompt color when doing `C-q $`, etc
set -g message-fg white

set-option -g set-titles on
set-option -g set-titles-string '#(whoami)@#H  (#S)'
set-option -g history-limit 100000 # Does this work?

set -g default-terminal "screen-256color" # <http://unix.stackexchange.com/questions/1045/getting-256-colors-to-work-in-tmux>

set -g status-right ' #{?client_prefix,#[reverse]<Prefix>#[noreverse] ,}#{=21:pane_title}'


# Mouse
# =====
set-option -g mouse on

# Based on <http://sc0ty.pl/2015/12/reasonable-mouse-support-in-tmux/>
# pane_in_mode is whether I'm already in copy mode
# mouse_any_flag is whether I'm in a scroll-handling program like emacs
# alternate_on is whether I'm in a full-screen program like [emacs, vim, less, mosh]
# Note: htop triggers mouse_any_flag but can only handle mouse input when compiled ncurses6 (eg, through linuxbrew)
# Note: when I pipe into less, #{pane_current_command} is bash.
# Note: this is very similar to what tmux-better-mouse-mode sets.
bind-key -n WheelUpPane \
    if-shell -t= "[[ #{pane_in_mode} = 1 ]] || [[ #{mouse_any_flag} = 1 ]]" \
        "send-keys -M" \
        "if-shell -t= '[[ #{alternate_on} = 1 ]]' \
            'send-keys Up Up Up' \
            'copy-mode -e'"
# We send scrolls (instead of arrows) to non-alternate-mode commands like cat.
bind-key -n WheelDownPane \
    if-shell -t= "[[ #{pane_in_mode} = 1 ]] || [[ #{mouse_any_flag} = 1 ]] || [[ #{alternate_on} = 0 ]]" \
        "send-keys -M" \
        "send-keys Down Down Down"

# Simple from online:
# set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# set -g @scroll-without-changing-pane on
# set -g @emulate-scroll-for-no-mouse-alternate-buffer on

# # debugging
# set -g status-right 'cmd:#{pane_current_command} ms_any_f:#{mouse_any_flag} ms_btn_f:#{mouse_button_flag} ms_std_f:#{mouse_standard_flag} mode:#{pane_in_mode} alt:#{alternate_on}'
# set -g status-interval 1
# set -g status-right-length 150


# TPM
# ===
# install all plugins by `C-q I`
# use with `C-q f`
set -g @plugin 'tmux-plugins/tmux-fpp'

# install TPM with `git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm`
run '~/.tmux/plugins/tpm/tpm'
