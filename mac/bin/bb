#!/bin/bash
set -euo pipefail
f() {

if [[ ${1:-} != 1 ]]; then
    echo repeating:
    while bb 1; do
        echo "- sleep..."
        sleep 3;
    done
else

echo "- webcam..."
# Take a webcam photo:
# `-f avfoundation` apparently selects the system?  and `-i 0` selects the webcam?
# `-ss 0.1` will hopefully mean I don't get occasional blank photos anymore.  StackOverflow used it.
# `-pix_fmt 0rgb` avoids a warning that the webcam doesn't support yuv422
# `-r 30` avoids an error that "selected" framerate 29.970030 is not supported
# `-frames:v 1` chooses one frame, and then `-update true` switches from video mode to image mode
# `-y` overwrites output file
ffmpeg -hide_banner -loglevel error -f avfoundation -ss 0.1 -pix_fmt 0rgb -r 30 -i 0 -frames:v 1 -update true -vf scale=256:-1 -y /tmp/webcam.png

echo "- screenshot..."
# Take a screenshot:
# Note: I had to give iTerm camera access in [Settings > Privacy&Security > Privacy > Camera]
# Note: I'm using ffmpeg to scale down images and save IO.
ffmpeg -hide_banner -loglevel error -f avfoundation -pix_fmt 0rgb -r 30 -capture_cursor true -i 1 -frames:v 1 -update true -vf scale=256:-1 -y /tmp/screen.png
#screencapture -C -x /tmp/screen.png

echo "- merge..."
# Combine images (and shrink):
#ffmpeg -hide_banner -loglevel error -i /tmp/webcam.png -i /tmp/screen.png -filter_complex "[0:v]scale=256:-1[v0];[1:v]scale=256:-1[v1];[v0][v1]vstack[v3];[v3]drawtext=x=7:y=7:fontsize=16:fontcolor=yellow:text='%{localtime}'" -update true -y -quality 75 /tmp/bb.webp
ffmpeg -hide_banner -loglevel error -i /tmp/webcam.png -i /tmp/screen.png -filter_complex "vstack[v3];[v3]drawtext=x=7:y=7:fontsize=16:fontcolor=yellow:text='%{localtime}'" -update true -y -quality 75 /tmp/bb.webp

echo "- upload..."
scp -q /tmp/bb.webp kpa@petervh.com:/tmp/bb.webp

fi

}; f "$@"
