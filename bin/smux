#!/bin/bash
set -euo pipefail
# This script auto-reconnects to a tmux session

# TODO: Tunnel: autossh -M 0 -o "ServerAliveInterval 10" -o "ServerAliveCountMax 2" -L 5000:localhost:3306 pv2




# If host isn't specified, use the first host in ~/.ssh/config
if ! [[ ${1:-} ]] && [[ -e ~/.ssh/config ]]; then
    host=$(cat ~/.ssh/config |perl -nale 'print $1 if m{#DEFAULT\s+(\S+)}'|head -1)
    echo "[ssh $host]"
    set "$host"
fi
# Error if host still isn't specified
if ! [[ ${1:-} ]]; then
    echo "usage: `basename $0` <host>"
    exit 1
fi


# Set terminal title to remote's name.  May get overridden by remote tmux or bashrc
echo -ne "\033]0;$1\007"


# Choose start dir
start_dir=.
if [[ $1 = kpa@* ]]; then
    start_dir=/var/www/html/
fi


# Configure autossh
export AUTOSSH_LOGFILE=/tmp/autossh.log
#export AUTOSSH_LOGLEVEL=7  # chattiest!

# TODO: Use mosh for servers that allow it
# `autossh -M0` tells autossh not to monitor the connection via a port.
# `ssh -t` creates a PTY (psuedo-terminal), even if a command is specified (because `tmux` needs a PTY).
# `-o ServerAliveInterval 10` means that a packet is sent every 10 seconds to remind firewalls that there's a connection.
# `-o ServerAliveCountMax 2` means that ssh dies if 2 consecutive ServerAlive packets don't get responses.
autossh -M0 -t -o "ServerAliveInterval 10" -o "ServerAliveCountMax 2" $@ "cd $start_dir; tmux new -As0" || :


# Restore local terminal title.
if [[ ${MACHINE_LABEL:-} ]]; then
    echo -ne "\033]0;$MACHINE_LABEL\007"
fi

echo DONE
