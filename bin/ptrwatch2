#!/usr/bin/env python3
"""Run `./ptrwatch2 run.py`.  Similar to watchexec."""
# TODO: look into watchfiles.run_process
# TODO: Make a polling no-deps version of this.
# TODO: Make this script support `watchgod`, `watchfiles`, dumb polling, etc.  Centralize this task here.

import sys, os
import subprocess as sub
from watchfiles import watch


def run(args):
    print('======', args)
    sub.run(args)
    print('\n')


if __name__ == '__main__':
    if not sys.argv[1:]:
        print('Usage:')
        print('  ptrwatch2 ./serve.py --port=8000   # Re-runs when serve.py changes')
        print('  ptrwatch2 utils.py -- ./lint.sh  # Re-runs when utils.py changes')
        sys.exit(1)
    elif '--' in sys.argv and sys.argv[2]=='--':
        filepath = sys.argv[1]
        cmd = sys.argv[3:]
    else:
        filepath = sys.argv[1]
        cmd = sys.argv[1:]
        if os.path.exists(filepath) and not filepath.startswith(('/','./')):
            cmd[0] = f'./{cmd[0]}'

    print(f'Watching {repr(filepath)} and running {cmd}')
    run(cmd)
    for changeset in watch(filepath):
        run(cmd)
